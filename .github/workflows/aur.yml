name: AUR

on:
#   schedule:
#     - cron: '0 0 * * 6' # Runs at 00:00 UTC on Sat.
  push:
  workflow_dispatch:

env:
  FORCE_COLOR : 'true' # Force colors in console output
  CLICOLOR: 1
  force_color_prompt: 'yes'
  color_prompt: 'yes'
  TERM: 'xterm'
  GCC_COLORS: 'error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
  COLORTERM: 'truecolor'


defaults:
  run:
    shell: bash

jobs:
  load_balancer:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3

        - name: Set Output packages
          id: set-packages
          run: |
            # Note: jq -c does not work well with `fromJson` as its outtput contains spaces
            #       Python json works well as it removes spaces
            python3 -c "import json; json.dump(json.load(open('packages_aur.json', 'r')), open('packages_aur.json', 'w'))"
            echo "::set-output name=matrix::$(cat packages_aur.json)"


        - name: View Packages
          run: cat packages_aur.json | jq --color-output

      outputs:
          matrix: ${{ steps.set-packages.outputs.matrix }}

  build:
    name: "Build ${{ matrix.name }}"
    needs: load_balancer
    runs-on: ubuntu-latest
    
    strategy:
        fail-fast: false
        matrix:
          include: ${{ fromJson(needs.load_balancer.outputs.matrix) }}

    container:
      image: "manjarolinux/base"
      options: "--privileged=true --tty=true"

    steps:
    - uses: actions/checkout@v3

    - name: Add colors to pacman
      run: |
        sed 's/#Color/Color/g' /etc/pacman.conf
        cat /etc/pacman.conf
    
    - name: Install basic dependencies
      run: pacman -Sy --noconfirm --needed base-devel coreutils xterm git sudo yay # man-pages man-db procps-ng

    - name: Create non root user
      run: |
          # Wheel group is the sudo group in Arch Linux
          useradd --create-home --groups wheel  user
          echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

    - name: Build ${{ matrix.name }}
      run: |
        pacman -Sy --noconfirm --needed ${{ matrix.depends }} || echo ""
        sudo -u user yay -Sy --noconfirm --needed --builddir . --nocleanafter ${{ matrix.depends }} || echo ""
        sudo -u user yay -Sy --noconfirm --needed --builddir . --nocleanafter --aur ${{ matrix.name }}

#     - name: Build
#       run: |
#         package=blueprint-compiler-git
#         sudo -u user git clone https://aur.archlinux.org/$package.git
#         cd $package
#         sudo -u user makepkg --noconfirm -si
#         mv *.pkg.tar.zst ..

    - run: ls -lRh
      if: always()

