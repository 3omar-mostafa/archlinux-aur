name: AUR

on:
  push:
  workflow_dispatch:

jobs:
  load_balancer:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3

        - name: Set Output packages
          id: set-packages
          run: |
            cat packages_aur.json | jq "{include: .}" > packages_aur_matrix.json
            echo "::set-output name=matrix::$(cat packages_aur_matrix.json)"


        - name: View Packages
          run: cat packages_aur.json | jq

      outputs:
          matrix: ${{ steps.set-packages.outputs.matrix }}

  build:
    name: "Build ${{ matrix.name }}"
    needs: load_balancer
    runs-on: ubuntu-latest
    
    strategy:
        fail-fast: false
        matrix: ${{ fromJson(needs.load_balancer.outputs.matrix) }}

    container:
      image: "manjarolinux/base"
      options: "--privileged=true --tmpfs /tmp --tmpfs /run"
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup

    steps:
    - uses: actions/checkout@v3

    - name: Install basic dependencies
      run: pacman -Sy --noconfirm --needed base-devel git sudo yay # man-pages man-db procps-ng

    - name: Create non root user
      run: |
          # Wheel group is the sudo group in Arch Linux
          useradd --create-home --groups wheel  user
          echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

    - name: Build ${{ matrix.name }}
      run: |
        pacman -Sy --noconfirm --needed ${{ matrix.depends }} || echo ""
        sudo -u user yay -Sy --noconfirm --needed --builddir . --nocleanafter ${{ matrix.depends }} || echo ""
        sudo -u user yay -Sy --noconfirm --needed --builddir . --nocleanafter --aur ${{ matrix.name }}

#     - name: Build
#       run: |
#         package=blueprint-compiler-git
#         sudo -u user git clone https://aur.archlinux.org/$package.git
#         cd $package
#         sudo -u user makepkg --noconfirm -si
#         mv *.pkg.tar.zst ..

    - run: ls -lRh
      if: always()

